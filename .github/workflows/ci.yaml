name: Build and Test

on:
  workflow_dispatch:
  pull_request:

jobs:
  build:
    name: Build Snap
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v3

      - id: get-version
        name: Retrieve workload version
        run: |
          VERSION=$(yq '(.version|split("-"))[0]' snap/snapcraft.yaml)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - id: snapcraft
        name: Build snap
        uses: snapcore/action-build@v1

      - id: upload
        name: Upload built snap job artifact
        uses: actions/upload-artifact@v3
        with:
          name: charmed-karapace_snap_amd64
          path: charmed-karapace_${{ steps.get-version.outputs.version }}_amd64.snap
    outputs:
      snap-file: ${{ steps.snapcraft.outputs.snap }}
      version: ${{ steps.get-version.outputs.version }}

  test:
    name: Test Snap
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download snap file
        uses: actions/download-artifact@v3
        with:
          name: charmed-karapace_snap_amd64
          path: .

      - name: Install snap file
        run: |
          sudo snap install charmed-karapace_${{ needs.build.outputs.version }}_amd64.snap --dangerous

      - name: Check binaries
        run: |
          password_creation=$(charmed-karapace.mkpasswd -u test -a sha512 testpasswd)
          if echo $password_creation | grep -q '"username": "test"'; then
            echo "Password created"
          else
            exit 1
          fi

  test_with_kafka_zk:
    name: Test with Kafka/Zookeeper
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download snap file
        uses: actions/download-artifact@v3
        with:
          name: charmed-karapace_snap_amd64
          path: .

      - name: Install snap file
        run: |
          sudo snap install charmed-karapace_${{ needs.build.outputs.version }}_amd64.snap --dangerous

      - name: Install Kafka/Zookeper snap
        run: |
          sudo snap install charmed-zookeeper --channel 3/edge
          sudo snap install charmed-kafka --channel 3/edge
      
      - name: Configure Zookeeper/Kafka
        run: |
          sudo cp /snap/charmed-zookeeper/current/opt/zookeeper/conf/zoo_sample.cfg /var/snap/charmed-zookeeper/current/etc/zookeeper/zoo.cfg
          sudo cp /snap/charmed-kafka/current/opt/kafka/config/server.properties /var/snap/charmed-kafka/current/etc/kafka

          echo listeners=PLAINTEXT://:9092,SASL_PLAINTEXT://:9093 | sudo tee -a /var/snap/charmed-kafka/current/etc/kafka/server.properties
          echo sasl.enabled.mechanisms=PLAIN,SCRAM-SHA-512 | sudo tee -a /var/snap/charmed-kafka/current/etc/kafka/server.properties
          echo security.inter.broker.protocol=PLAINTEXT | sudo tee -a /var/snap/charmed-kafka/current/etc/kafka/server.properties

      - name: Configure authentication for Kafka-Karapace
        run: |
          echo "sasl_plaintext.KafkaServer { \
            org.apache.kafka.common.security.plain.PlainLoginModule required \
            username="admin" \
            password="adminpass" \
            user_admin="adminpass" \
            user_karapace="karapass"; \
          };" | sudo tee /var/snap/charmed-kafka/current/etc/kafka/jaas.conf
            

          sudo mkdir /etc/systemd/system/snap.charmed-kafka.daemon.service.d/
          sudo touch /etc/systemd/system/snap.charmed-kafka.daemon.service.d/override.conf
          echo "[Service]" | sudo tee -a /etc/systemd/system/snap.charmed-kafka.daemon.service.d/override.conf
          echo "Environment=KAFKA_OPTS=-Djava.security.auth.login.config=etc/kafka/jaas.conf" \
            | sudo tee -a /etc/systemd/system/snap.charmed-kafka.daemon.service.d/override.conf 

          sudo systemctl daemon-reload

      - name: Configure karapace.config.json
        run: |
          sudo sed -i -e 's|localhost:9092|localhost:9093|g' /var/snap/charmed-karapace/current/etc/karapace/karapace.config.json
          sudo sed -i -e 's|SCRAM-SHA-512|PLAIN|g' /var/snap/charmed-karapace/current/etc/karapace/karapace.config.json
          sudo sed -i -e 's|"sasl_plain_username": ""|"sasl_plain_username": "karapace"|g' /var/snap/charmed-karapace/current/etc/karapace/karapace.config.json
          sudo sed -i -e 's|"sasl_plain_password": ""|"sasl_plain_password": "karapass"|g' /var/snap/charmed-karapace/current/etc/karapace/karapace.config.json

      - name: Configure Karapace authfile.json
        run: |
          echo '{ 
            "users": [{
                "username": "testuser",
                "algorithm": "sha256",
                "salt": "t6Te-2IcG6m_aDi1g09VuA", 
                "password_hash": "OsZSArHXEgZd1sr0DwWeGzvBXtuHKzDhCEoJ+etzBpE="
            }],
            "permissions": [{
                "username": "testuser", 
                "operation": "Write",
                "resource": ".*"
            }]
          }' | sudo tee /var/snap/charmed-karapace/current/etc/karapace/authfile.json
      
      - name: Start snap services
        run: |
          sudo snap start charmed-zookeeper.daemon
          sleep 10
          sudo snap start charmed-kafka.controller
          sleep 5
          sudo snap start charmed-kafka.daemon
          sleep 5
          sudo snap start charmed-karapace.daemon
          sleep 5

      - name: Test JSON schema creation
        run: | 
          result=$(curl -X POST -H "Content-Type: application/vnd.schemaregistry.v1+json" -H "Authorization: Basic dGVzdHVzZXI6dGVzdHBhc3M=" \
            --data '{"schemaType": "JSON", "schema": "{\"type\": \"object\",\"properties\":{\"age\":{\"type\": \"number\"}},\"additionalProperties\":true}"}' \
            http://localhost:8081/subjects/test-key-json-schema/versions)
          
          if [ "$result" != "{\"id\":1}" ]; then
            exit 1;
          fi
